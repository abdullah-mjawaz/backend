"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.0.10.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import datetime

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'acpvrw%x-lwr+l67+g@k&$58cns+=vdc%wa#=51ur*fi#va=b='
SHIPPO_TEST_TOKEN = 'shippo_test_720a090b59df199f6e43a7aad0673ee4e17e3021'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
SITE_ID = 1
JWT_PRIVATE_KEY = 'deq=q1nltm@^^2cc+v'
JWT_PUBLIC_KEY = '2cc+v29'


ALLOWED_HOSTS = ['*']
RATINGS_RANGE = range(0,10)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'rest_framework',
    'corsheaders',
    'django_filters',
    # 'accounts',
    # 'management',
    # 'HResources',
    # 'cms',
    # 'channels',
    # 'chat',
    # 'notifications',
    # 'contacts',
    # 'shippo',
]

MIDDLEWARE = [
   'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'backend.wsgi.application'

ASGI_APPLICATION = 'backend.routing.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('redis', 6379)],
        },
    },
}


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': os.environ.get('DB_HOST'),
        'NAME': os.environ.get('DB_NAME'),
        'USER': os.environ.get('DB_USER'),
        'PASSWORD': os.environ.get('DB_PASS'),
    }
}
# Django Rest Framework
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'accounts.rest_backend.JWTokenAuthenticationBackend',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 5,
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',)
}

# Cache
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://redis:6379',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    'localhost',
    '127.0.0.1'
)
# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = 'media/'
STATIC_ROOT = 'static/'

# user configs
AUTHENTICATION_BACKENDS = [# 'accounts.backends.AuthenticationBackend',
                           'django.contrib.auth.backends.ModelBackend']
# AUTH_USER_MODEL = 'accounts.User'
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_REQUIRED = False
ACCOUNT_EMAIL_VERIFICATION = 'none'
REST_SESSION_LOGIN = True
USERNAME_MAX_LENGTH = 30
USERNAME_MIN_LENGTH = 4
EMAIL_VERIFICATION = False
PASSWORD_MIN_LENGTH = 6
USER_CREDENCIAL = 'Username'

# Authentication  using JWT configurations
REST_JWT_LOGIN = True
REST_SESSION_LOGIN = False

JWT_AUDIENCE = None
JWT_ISSUER = None
JWT_ALGORITHM = 'HS256'
JWT_SESSION_ENABLE = True
JWT_AUTH_COOKIE = None
JWT_AUTH_HEADER_PREFIX = 'Bearer'
JWT_LEEWAY = 0

JWT_ALLOW_REFRESH = True
JWT_VERIFY_EXPIRATION = True
JWT_VERIFY = True

JWT_EXPIRATION_DELTA = datetime.timedelta(days=1)
JWT_REFRESH_EXPIRATION_DELTA = datetime.timedelta(days=1)
CSRF_COOKIE_SECURE = False

CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    'http://localhost:3050',
    'http://127.0.0.1:3050',
    'http://localhost:4200',
    'http://localhost:4200',
)
